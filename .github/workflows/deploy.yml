name: 🚀 Deploy
on:
  push:
    branches:
      - main
  pull_request:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  changes:
    name: 🔎 Determine deployable changes
    runs-on: ubuntu-latest
    outputs:
      DEPLOYABLE: ${{steps.changes.outputs.DEPLOYABLE}}
    steps:
      - name: ⬇️ Checkout repo
        uses: actions/checkout@v3
        with:
          fetch-depth: '50'

      - name: ⎔ Setup node
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: 🔎 Determine deployable changes
        id: changes
        run: >-
          echo "DEPLOYABLE=$(node ./other/is-deployable.cjs ${{ github.sha }})" >> "$GITHUB_OUTPUT"

      - name: ❓ Deployable
        run: >-
          echo "DEPLOYABLE: ${{steps.changes.outputs.DEPLOYABLE}}"

  lint:
    name: ⬣ ESLint
    needs: [changes]
    if: needs.changes.outputs.DEPLOYABLE == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: ⬇️ Checkout repo
        uses: actions/checkout@v3

      - name: ⎔ Setup node
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: 📥 Download deps
        uses: bahmutov/npm-install@v1
        with:
          useLockFile: false

      - name: 🔬 Lint
        run: npm run lint

  typecheck:
    name: ʦ TypeScript
    needs: [changes]
    if: needs.changes.outputs.DEPLOYABLE == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: ⬇️ Checkout repo
        uses: actions/checkout@v3

      - name: ⎔ Setup node
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: 📥 Download deps
        uses: bahmutov/npm-install@v1
        with:
          useLockFile: false

      - name: 🔎 Type check
        run: npm run typecheck

  deploy:
    name: 🚀 Deploy
    runs-on: ubuntu-latest
    needs: [changes, lint, typecheck]
    # only build/deploy main branch on pushes
    if: ${{ github.ref == 'refs/heads/main' &&
      github.event_name == 'push' && needs.changes.outputs.DEPLOYABLE == 'true'
      }}

    steps:
      - name: ⬇️ Checkout repo
        uses: actions/checkout@v3

      - name: 👀 Read app name
        uses: SebRollen/toml-action@v1.0.2
        id: app_name
        with:
          file: fly.toml
          field: app

      - name: 🚀 Deploy Production
        if: ${{ github.ref == 'refs/heads/main' }}
        uses: superfly/flyctl-actions@1.4
        with:
          args: 'deploy --remote-only --build-arg COMMIT_SHA=${{ github.sha }}'
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
